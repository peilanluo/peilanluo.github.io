<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>默默的心路</title>
    <link>https://peilanluo.github.io/</link>
    <description>Recent content on 默默的心路</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 04 May 2023 14:11:53 +0800</lastBuildDate>
    
	<atom:link href="https://peilanluo.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>golang--channel的底层原理</title>
      <link>https://peilanluo.github.io/post/golang/channel/</link>
      <pubDate>Thu, 04 May 2023 14:11:53 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/golang/channel/</guid>
      <description>参考文献：https://juejin.cn/post/7157663775955353614 在go中，channel是用于goroutin</description>
    </item>
    
    <item>
      <title>数据结构--hash表</title>
      <link>https://peilanluo.github.io/post/data/hash/</link>
      <pubDate>Wed, 03 May 2023 23:38:21 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/data/hash/</guid>
      <description>哈希表是数组的一种扩展，由数组演化而来，底层依赖数组支持按下标快速访问元素的特性。 哈希函数 哈希函数首先是一个函数，可以把它定义成hash(k</description>
    </item>
    
    <item>
      <title>mysql—存储引擎</title>
      <link>https://peilanluo.github.io/post/mysql/mysql_engine/</link>
      <pubDate>Sun, 18 Sep 2022 17:40:45 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/mysql/mysql_engine/</guid>
      <description>1 InnoDB存储引擎 InnoDB是MySQL默认的事务型引擎（从MySQL 5.5开始作为默认的存储引擎），它被设计用来处理大量的短期事务。</description>
    </item>
    
    <item>
      <title>Redis--Redis的主从和集群</title>
      <link>https://peilanluo.github.io/post/redis/redis_copy/</link>
      <pubDate>Mon, 12 Sep 2022 16:44:20 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/redis/redis_copy/</guid>
      <description>1 Redis的复制 在Redis中，用户可以通过执行SLAVEOF命令或设置slaveof选项，让一个服务器去复制另一个服务器，被复制的服务器</description>
    </item>
    
    <item>
      <title>golang--一些面试必备基础知识</title>
      <link>https://peilanluo.github.io/post/golang/basic/</link>
      <pubDate>Sun, 11 Sep 2022 18:12:53 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/golang/basic/</guid>
      <description>切片的扩容策略 首先判断，如果新申请容量大于2倍的旧容量，最终容量就是新申请的容量。 如果旧容量小于1024，则新容量是旧容量的两倍。 如果旧切片</description>
    </item>
    
    <item>
      <title>Redis--Redis的数据结构</title>
      <link>https://peilanluo.github.io/post/redis/redis_basic/</link>
      <pubDate>Sun, 11 Sep 2022 16:07:20 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/redis/redis_basic/</guid>
      <description>参考书目：《Redis设计与实现》 1. 简单动态字符串 Redis没有直接使用C语言传统的字符串表示，而是构建了一种名为简单动态字符串（SDS）的</description>
    </item>
    
    <item>
      <title>istio--流量控制</title>
      <link>https://peilanluo.github.io/post/kubernetes/istio_crd/</link>
      <pubDate>Mon, 15 Aug 2022 21:44:53 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/kubernetes/istio_crd/</guid>
      <description>参考文献：云原生社区《深入理解Istio 云原生服务网格进阶实战》 1. 流量控制 Istio的流量控制是通过一系列的CRD（Kubernetes的自</description>
    </item>
    
    <item>
      <title>Prometheus--PromQL</title>
      <link>https://peilanluo.github.io/post/prometheus/promql/</link>
      <pubDate>Sun, 31 Jul 2022 15:36:20 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/prometheus/promql/</guid>
      <description>1. PromQL聚合操作 PromQL的聚合操作仅适用于单个即时向量，其基本语法为： &amp;lt;aggr-op&amp;gt;([parameter,] &amp;lt;vector expression&amp;gt;) [without|by (&amp;lt;label list&amp;gt;)] 其中： aggr-op：为聚合操作符，包括如下表 名</description>
    </item>
    
    <item>
      <title>Prometheus--Prometheus的数据类型和PromQL简介</title>
      <link>https://peilanluo.github.io/post/prometheus/prometheus_basic/</link>
      <pubDate>Sun, 19 Jun 2022 11:18:20 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/prometheus/prometheus_basic/</guid>
      <description>Prometheus的数据类型 Prometheus把所有数据存储为时间序列（time series）数据，每个时间序列数据都具有带时间戳的数据</description>
    </item>
    
    <item>
      <title>mysql—MVCC多版本并发控制</title>
      <link>https://peilanluo.github.io/post/mysql/mysql_mvcc/</link>
      <pubDate>Sat, 04 Jun 2022 17:56:20 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/mysql/mysql_mvcc/</guid>
      <description>参考： https://www.cnblogs.com/yaoyangding/p/15659608.html https://zhuanlan.zhihu.com/p/421769708 MVCC（Multiversion Concurrency Control）即多版本并发控制，是现代数据库引擎中常用的处理读写冲突的手段，目的在于提高数据</description>
    </item>
    
    <item>
      <title>mysql—四大特性（ACID）、事务的隔离级别和死锁</title>
      <link>https://peilanluo.github.io/post/mysql/mysql_acid/</link>
      <pubDate>Tue, 31 May 2022 15:31:45 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/mysql/mysql_acid/</guid>
      <description>参考文献：https://blog.csdn.net/zDavid_2018/article/details/89929862 《高性能MyS</description>
    </item>
    
    <item>
      <title>Redis--数据的持久化方式</title>
      <link>https://peilanluo.github.io/post/redis/redis_persistence/</link>
      <pubDate>Tue, 31 May 2022 15:20:20 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/redis/redis_persistence/</guid>
      <description>参考书目：《Redis设计与实现》 1 RDB持久化 RDB持久化既可以手动执行，也可以根据服务器配置选项定期执行。 1.1 RDB文件的创建与载入 有两个</description>
    </item>
    
    <item>
      <title>golang--GMP模型和垃圾回收机制</title>
      <link>https://peilanluo.github.io/post/golang/gmp_gc/</link>
      <pubDate>Mon, 31 Jan 2022 18:12:53 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/golang/gmp_gc/</guid>
      <description>golang的GMP模型 G G是Goroutine的缩写。Goroutine是一个由Go运行时管理的轻量级线程，一般称之为协程。协程是用户态的</description>
    </item>
    
    <item>
      <title>elasticsearch--搜索</title>
      <link>https://peilanluo.github.io/post/elasticsearch/search/</link>
      <pubDate>Sat, 10 Jul 2021 17:05:20 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/elasticsearch/search/</guid>
      <description>索引和映射 手动创建索引和映射 这里主要使用curl工具来发送请求。先手动创建一个名为user的索引。 1 curl -X PUT localhost:9200/user 获取映射 1 curl -X GET localhost:9200/user/_mapping/user?pretty 其中第一个us</description>
    </item>
    
    <item>
      <title>数据结构--红黑树</title>
      <link>https://peilanluo.github.io/post/data/red_black_tree/</link>
      <pubDate>Mon, 14 Jun 2021 19:02:21 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/data/red_black_tree/</guid>
      <description>由于普通二叉搜索树在最坏的情况下会转变成一个线性的链表，其时间复杂度会退化为O(n)，并且如果树的高度很高，他的效率也是无法保证的，所以在普</description>
    </item>
    
    <item>
      <title>kubernetes--详解Service</title>
      <link>https://peilanluo.github.io/post/kubernetes/service/</link>
      <pubDate>Sun, 18 Apr 2021 16:06:16 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/kubernetes/service/</guid>
      <description>通过创建Service可以为一组具有相同功能的容器应用提供一个统一的入口地址，并将请求负载分发到后端的各个应用容器上。 Service的基本用</description>
    </item>
    
    <item>
      <title>kubernetes--Pod的应用</title>
      <link>https://peilanluo.github.io/post/kubernetes/pod/</link>
      <pubDate>Sun, 18 Apr 2021 15:01:20 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/kubernetes/pod/</guid>
      <description>Pod是Kubernetes中能够创建和部署的最小单元，是Kubernetes集群中的一个应用实例，总是部署在同一个节点node上。Pod中</description>
    </item>
    
    <item>
      <title>mysql—EXPLAIN的使用</title>
      <link>https://peilanluo.github.io/post/mysql/mysql_explain/</link>
      <pubDate>Mon, 29 Mar 2021 20:43:45 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/mysql/mysql_explain/</guid>
      <description>EXPLAIN命令是查看查询优化器如何决定执行查询的主要方法，但是它是有局限性的，并不总是准确的，但他在一定程度上仍然是衡量MySQL优化的</description>
    </item>
    
    <item>
      <title>Docker--Dockerfile的使用</title>
      <link>https://peilanluo.github.io/post/docker/docker_dockerfile/</link>
      <pubDate>Sun, 28 Mar 2021 18:50:53 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/docker/docker_dockerfile/</guid>
      <description>使用Dockerfile创建镜像 Dockerfile是一个文本格式的配置文件，用户可以使用Dockerfile来快速创建自定义的镜像。 基本结</description>
    </item>
    
    <item>
      <title>Docker--一些基础知识</title>
      <link>https://peilanluo.github.io/post/docker/docker_concept/</link>
      <pubDate>Sun, 28 Mar 2021 18:49:53 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/docker/docker_concept/</guid>
      <description>搭建本地私有仓库 安装Docker后，可以通过官方提供的registry镜像来搭建本地私有仓库： docker run -d -p 5000:5000 registry:2 // 指定镜像文件存放在本地的指定路径</description>
    </item>
    
    <item>
      <title>Redis--分布式锁</title>
      <link>https://peilanluo.github.io/post/redis/redis_lock/</link>
      <pubDate>Sun, 13 Dec 2020 21:42:20 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/redis/redis_lock/</guid>
      <description>redis使用WATCH命令来代替对数据进行加锁，因为WATCH只会在数据被其他客户端抢先修改了的情况下通知执行了这个命令的客户端，而不会阻</description>
    </item>
    
    <item>
      <title>MongoDB--聚合</title>
      <link>https://peilanluo.github.io/post/mongodb/mongodb_aggregate/</link>
      <pubDate>Tue, 08 Dec 2020 22:58:20 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/mongodb/mongodb_aggregate/</guid>
      <description>聚合框架 使用聚合框架可以对集合中的文档进行变换和组合。可以用多个构件创建一个管道（pipeline），这些构件包括筛选（filtering）</description>
    </item>
    
    <item>
      <title>MongoDB--索引</title>
      <link>https://peilanluo.github.io/post/mongodb/mongodb_index/</link>
      <pubDate>Mon, 07 Dec 2020 20:46:20 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/mongodb/mongodb_index/</guid>
      <description>MongoDB中的索引 MongoDB中的索引一部分用法和MySQL中是很相似的，但有些部分也存在差异。 使用复合索引 复合索引相对于单键索引要复</description>
    </item>
    
    <item>
      <title>MongoDB--一些基础知识</title>
      <link>https://peilanluo.github.io/post/mongodb/mongodb_basic/</link>
      <pubDate>Mon, 07 Dec 2020 20:41:20 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/mongodb/mongodb_basic/</guid>
      <description>mongoDB的基本操作符 $inc 增加或减少数字 $push 向已有的数组末尾加入一个元素 $each 可以配合$push使用添加多个值 1 {&amp;#34;$push&amp;#34;: {&amp;#34;tags&amp;#34;: {&amp;#34;$each&amp;#34;: [1, 2, 3]}}} $addToSet 可以插入不重复的值</description>
    </item>
    
    <item>
      <title>mysql--查询性能优化</title>
      <link>https://peilanluo.github.io/post/mysql/mysql_query_optimizing/</link>
      <pubDate>Sun, 29 Nov 2020 22:04:45 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/mysql/mysql_query_optimizing/</guid>
      <description>为什么查询速度会变慢 所谓查询优化最重要的是响应时间，如果把查询看作是一个任务，那么它是由一些列子任务组成，每个子任务消耗一定的时间。如果要优</description>
    </item>
    
    <item>
      <title>mysql--索引优化</title>
      <link>https://peilanluo.github.io/post/mysql/mysql_index_optimizing/</link>
      <pubDate>Sun, 29 Nov 2020 16:01:45 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/mysql/mysql_index_optimizing/</guid>
      <description>1 索引基础 MySQL支持多种索引引擎，最常用的例如B-Tree、哈希索引。 1.1 B-Tree索引的限制 现在有这么一个场景，有一个B-Tree类型</description>
    </item>
    
    <item>
      <title>mysql--Schema与数据类型优化</title>
      <link>https://peilanluo.github.io/post/mysql/mysql_field_-optimizing/</link>
      <pubDate>Sat, 21 Nov 2020 18:08:45 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/mysql/mysql_field_-optimizing/</guid>
      <description>存储引擎 在MySQL5.5版本将InnoDB作为默认的存储引擎。 数据类型优化 通常把可为null的列改为not null带来的性能提升比较小，所</description>
    </item>
    
    <item>
      <title>golang--排序算法Golang实现</title>
      <link>https://peilanluo.github.io/post/golang/sort/</link>
      <pubDate>Tue, 03 Nov 2020 23:21:34 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/golang/sort/</guid>
      <description>冒泡排序 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 // 简单冒泡排序，效率极差 func SimpleBubbleSort(arr []int) []int { for i := 0; i &amp;lt; len(arr); i++ { for</description>
    </item>
    
    <item>
      <title>数据结构--二叉搜索树</title>
      <link>https://peilanluo.github.io/post/data/binary_search_tree/</link>
      <pubDate>Tue, 01 Sep 2020 15:02:21 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/data/binary_search_tree/</guid>
      <description>二叉搜索树 概念 二叉搜索树是一种特殊的二叉树，对于二叉搜索树的任意根结点x，其左子树上所有结点的值最大不超过x，其右子树上所有结点的值最小不低</description>
    </item>
    
    <item>
      <title>kubernetes--的一些重要概念</title>
      <link>https://peilanluo.github.io/post/kubernetes/important_concept/</link>
      <pubDate>Wed, 26 Aug 2020 18:26:53 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/kubernetes/important_concept/</guid>
      <description>Kubernetes是什么 Kubernetes是一个全新的基于容器技术的分布式架构领先方案，他的前身是谷歌内部使用逾十余年的Borg技术，K</description>
    </item>
    
    <item>
      <title>golang--深入简出，带你用golang的反射撸一个公用后台查询方法</title>
      <link>https://peilanluo.github.io/post/golang/reflect_admin/</link>
      <pubDate>Mon, 13 Apr 2020 18:32:53 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/golang/reflect_admin/</guid>
      <description>一些基本方法 本篇不会介绍反射的基本概念和原理等，会从每个常用的方法入手，讲解一些基本和进阶用法，反射不太适合在业务层使用，因为会几何倍的降低</description>
    </item>
    
    <item>
      <title>数据结构--树</title>
      <link>https://peilanluo.github.io/post/data/tree/</link>
      <pubDate>Sun, 19 Jan 2020 16:03:21 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/data/tree/</guid>
      <description>树和二叉树的定义 树的基本术语 结点：树中的每一个独立单元。如图中的A、B、C、D等。 结点的度：结点拥有的子树的个数称为结点的度。 树的度：树内各</description>
    </item>
    
    <item>
      <title>ansible--playbook</title>
      <link>https://peilanluo.github.io/post/python/ansible_playbook/</link>
      <pubDate>Tue, 19 Nov 2019 19:33:09 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/python/ansible_playbook/</guid>
      <description>playbook语法 playbook使用YAML语法描述配置文件，总的来说具有以下特性： 需要以“&amp;mdash;”开始，且需顶行手写 此行开始正</description>
    </item>
    
    <item>
      <title>ansible--Ad-Hoc命令集 </title>
      <link>https://peilanluo.github.io/post/python/ansible_adhoc/</link>
      <pubDate>Tue, 19 Nov 2019 16:42:25 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/python/ansible_adhoc/</guid>
      <description>Ad-Hoc相当于临时命令，适用于解决一些临时性的问题 用法 基本用法为：ansible &amp;lt;pattern&amp;gt; [options] options的可用选项如下（只列出部分）： -v, &amp;nd</description>
    </item>
    
    <item>
      <title>ansible--ansible基础</title>
      <link>https://peilanluo.github.io/post/python/ansible_basic/</link>
      <pubDate>Tue, 19 Nov 2019 15:52:12 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/python/ansible_basic/</guid>
      <description>配置文件 ansible的配置文件只有一个，即ansible.cfg，它可以存在于多个地方，ansible读取配置文件的顺序依次是当前命令执行</description>
    </item>
    
    <item>
      <title>golang--安装golang并安装grpc-grpcgateway环境</title>
      <link>https://peilanluo.github.io/post/golang/install_grpc_grpcgateway/</link>
      <pubDate>Thu, 15 Aug 2019 13:57:20 +0800</pubDate>
      
      <guid>https://peilanluo.github.io/post/golang/install_grpc_grpcgateway/</guid>
      <description>安装goland环境 下载golang安装包，国内环境打开https://studygolang.com/dl，国外环境打开https://g</description>
    </item>
    
    <item>
      <title>归档</title>
      <link>https://peilanluo.github.io/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://peilanluo.github.io/archives/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>